{"version":3,"sources":["app/hooks.ts","Landing/Hero/heroSlice.tsx","Hamburger/Hamburger.tsx","LiquidButton/LiquidButton.tsx","Landing/Hero/Hero.tsx","Cursor/cursorSlice.tsx","Cursor/Cursor.tsx","HoverButton/HoverButton.tsx","Landing/Sound/Sound.tsx","Landing/Pricing/Pricing.tsx","Landing/Landing.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","heroSlice","createSlice","name","initialState","currentImg","imgs","reducers","setCurrentImg","state","idx","payload","toString","switchCurrentImg","parseInt","actions","selectImgs","hero","selectCurrentImg","Hamburger","React","useState","expanded","setExpanded","hamburgerBorder","className","id","onClick","LiquidButton","Hero","dispatch","handleClick","document","getElementById","src","window","scrollTo","top","Math","max","documentElement","clientHeight","innerHeight","left","behavior","style","backgroundColor","cursorSlice","cursorYRadius","cursorXRadius","cursorHeight","cursorWidth","setTop","setLeft","setCursorYRadius","yRadius","setCursorXRadius","xRadius","selectTop","cursor","selectLeft","selectCursorHeight","selectCursorWidth","captureMouse","e","vh","pageY","nativeEvent","clientX","Cursor","props","useEffect","height","width","HoverButton","newStyle","Object","entries","key","value","onMouseMove","x","offsetX","y","offsetY","target","setProperty","handleButtonMove","text","Sound","fontSize","color","padding","Pricing","Landing","App","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","status","increment","decrement","incrementByAmount","action","extraReducers","builder","addCase","pending","fulfilled","store","configureStore","reducer","counter","counterReducer","heroReducer","cursorReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cda4b707.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {RootState} from \"../../app/store\";\r\n\r\nconst initialState = {\r\n    currentImg: '0',\r\n    imgs: ['landing/hero1/Image 1.png', 'landing/hero2/Image 2.png', 'landing/hero3/Image 3.png']\r\n}\r\n\r\nexport const heroSlice = createSlice({\r\n    name: 'hero',\r\n    initialState,\r\n    reducers: {\r\n        setCurrentImg: (state, idx: PayloadAction<number>) => {\r\n            state.currentImg = idx.payload.toString()\r\n        },\r\n        switchCurrentImg: (state) => {\r\n            state.currentImg = ((parseInt(state.currentImg) + 1) % 3).toString();\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setCurrentImg } = heroSlice.actions;\r\n\r\nexport const selectImgs = (state: RootState) =>  state.hero.imgs;\r\nexport const selectCurrentImg = (state: RootState) =>  state.hero.currentImg;\r\n\r\n\r\nexport default heroSlice.reducer;","import \"./Hamburger.scss\"\r\nimport React, {ChangeEvent, MouseEventHandler, useEffect} from \"react\";\r\n\r\nexport function Hamburger() {\r\n    // function handleClick(e: React.MouseEvent<HTMLDivElement>) {\r\n    //     const elem = e.target as HTMLDivElement\r\n    //     elem.parentElement?.classList.add(\"expanded\")\r\n    // }\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const hamburgerBorder = <div className={\"hamburger__border \" + (expanded ? \"expanded\" : \"\")}/>\r\n\r\n    return (\r\n        <div className={\"hamburger__container\"}>\r\n            <div id={\"hamburger__logo\"}>\r\n                <div className=\"container\" onClick={() => setExpanded(!expanded)}>\r\n                    <div className=\"bar1\"/>\r\n                    <div className=\"bar2\"/>\r\n                    <div className=\"bar3\"/>\r\n                </div>\r\n                EXP|CON\r\n            </div>\r\n            {hamburgerBorder}\r\n\r\n        </div>\r\n    )\r\n}","import \"./LiquidButton.scss\"\r\n\r\nexport function LiquidButton() {\r\n\r\n\r\n    return (\r\n        <div id={\"liquidcontainer\"}>\r\n            <a className=\"btn-mix-noborder\" data-text=\"TRY IT NOW\">TRY IT NOW</a>\r\n            {/*<a href=\"#\" className=\"btn-mix\" data-text=\"codepen\">codepen</a>*/}\r\n            {/*<a href=\"#\" className=\"btn-mix-noRadius\" data-text=\"marco\">marco</a>*/}\r\n        </div>\r\n    )\r\n}","import \"./Hero.scss\"\r\nimport {HoverButton} from \"../../HoverButton/HoverButton\";\r\nimport {EventHandler} from \"react\";\r\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\r\nimport {selectCurrentImg, selectImgs, setCurrentImg} from \"./heroSlice\";\r\nimport {Hamburger} from \"../../Hamburger/Hamburger\";\r\nimport {LiquidButton} from \"../../LiquidButton/LiquidButton\";\r\n\r\nexport function Hero(){\r\n    const dispatch = useAppDispatch()\r\n    const imgs = useAppSelector(selectImgs)\r\n    const currentImg = useAppSelector(selectCurrentImg)\r\n\r\n    function handleClick(idx: number){\r\n        const imgBg = document.getElementById(\"background\")\r\n        if (imgBg === null) return;\r\n        // Better to programmatically change the image than to rely on state due to incorrect translate on imgs [1].\r\n        // Fixable by changing the image to be correctly aligned on the y axis.\r\n        // This is a temporary and ugly solution.\r\n        // if (idx === 1){\r\n        //     imgBg.style.transform = \"translateY(-12%)\";\r\n        // }\r\n        // else {\r\n        //     imgBg.style.transform = \"translateY(-22%)\";\r\n        // }\r\n        dispatch(setCurrentImg(idx))\r\n    }\r\n\r\n    return (\r\n        <div id={\"hero\"}>\r\n            <img id={\"background\"} src={imgs[parseInt(currentImg)]}/>\r\n            <div id={\"header\"}><Hamburger/></div>\r\n            <div id={\"messages\"}>\r\n                <div id={\"title\"}>\r\n                    INTERACTIVE CONCERT EXPERIENCE\r\n                </div>\r\n                <div id={\"message\"}>\r\n                    Experience your favourite artists like never before and from the comfort of your own home.\r\n                </div>\r\n                <div id={\"button\"} onClick={() => window.scrollTo({top: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0) * 3, left: 0, behavior:\"smooth\"} )}>\r\n                    {/*<HoverButton text={\"TRY IT NOW\"} fontSize={\"0.6em\"}/>*/}\r\n                    <LiquidButton/>\r\n                </div>\r\n            </div>\r\n            <div id={\"slider\"}>\r\n                <div className=\"slider__circle\" style={{backgroundColor: currentImg === '0' ? 'white': 'unset'}} onClick={() => handleClick(0)}/>\r\n                <div className=\"slider__circle\" style={{backgroundColor: currentImg === '1' ? 'white': 'unset'}} onClick={() => handleClick(1)}/>\r\n                <div className=\"slider__circle\" style={{backgroundColor: currentImg === '2' ? 'white': 'unset'}} onClick={() => handleClick(2)}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {RootState} from \"../app/store\";\r\n\r\nconst initialState = {\r\n    top: '120vh',\r\n    left: '50vw',\r\n    cursorYRadius: \"0\",\r\n    cursorXRadius: \"0\",\r\n    cursorHeight: \"0px\",\r\n    cursorWidth: \"0px\"\r\n}\r\n\r\nexport const cursorSlice = createSlice({\r\n    name: 'cursor',\r\n    initialState,\r\n    reducers: {\r\n        setTop: (state, top: PayloadAction<number>) => {\r\n            state.top = `${(top.payload - parseInt(state.cursorYRadius)).toString()}px`\r\n        },\r\n        setLeft: (state, left: PayloadAction<number>) => {\r\n            state.left = `${(left.payload - parseInt(state.cursorXRadius)).toString()}px`\r\n        },\r\n        setCursorYRadius: (state, yRadius: PayloadAction<number>) => {\r\n            state.cursorYRadius = yRadius.payload.toString()\r\n            state.cursorHeight = `${(yRadius.payload * 2).toString()}px`\r\n        },\r\n        setCursorXRadius: (state, xRadius: PayloadAction<number>) => {\r\n            state.cursorXRadius = xRadius.payload.toString()\r\n            state.cursorWidth = `${(xRadius.payload * 2).toString()}px`\r\n        },\r\n    }\r\n})\r\n\r\nexport const { setTop, setLeft, setCursorYRadius, setCursorXRadius  } = cursorSlice.actions;\r\n\r\nexport const selectTop = (state: RootState) =>  state.cursor.top;\r\nexport const selectLeft = (state: RootState) =>  state.cursor.left;\r\nexport const selectCursorHeight = (state: RootState) =>  state.cursor.cursorHeight;\r\nexport const selectCursorWidth = (state: RootState) =>  state.cursor.cursorWidth;\r\n\r\n\r\nexport default cursorSlice.reducer;","import \"./Cursor.scss\"\r\nimport React, {useEffect} from \"react\";\r\nimport {ThunkDispatch} from \"@reduxjs/toolkit\";\r\nimport {\r\n    selectCursorHeight, selectCursorWidth,\r\n    selectLeft,\r\n    selectTop,\r\n    setCursorXRadius,\r\n    setCursorYRadius,\r\n    setLeft,\r\n    setTop\r\n} from \"./cursorSlice\";\r\nimport {useAppDispatch, useAppSelector} from \"../app/hooks\";\r\n\r\nexport function captureMouse(e: React.MouseEvent, dispatch: ThunkDispatch<any, any, any>){\r\n    // Uses page for normal parent div\r\n    // dispatch(setLeft(e.pageX + 0))\r\n    // dispatch(setTop(e.pageY - 0))\r\n    // Uses seperate values for relative parent\r\n    // @ts-ignore\r\n    // console.log((e.nativeEvent.layerX,e.nativeEvent.layerY)) //buggy\r\n    // console.log((e.nativeEvent.clientX,e.nativeEvent.clientY))// off\r\n    // console.log((e.nativeEvent.offsetX,e.nativeEvent.offsetY))//buggy\r\n    // console.log((e.nativeEvent.x,e.nativeEvent.y))\r\n    // @ts-ignore\r\n    const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\r\n    if (e.pageY > 2 * vh) return;\r\n\r\n    // @ts-ignore\r\n    // @ts-ignore\r\n    dispatch(setLeft(e.nativeEvent.clientX))\r\n    // @ts-ignore\r\n    dispatch(setTop(e.pageY - vh - 10))\r\n}\r\n\r\nexport interface CursorProps{\r\n    cursorYRadius: number,\r\n    cursorXRadius: number\r\n}\r\n\r\nexport function Cursor(props:CursorProps){\r\n    const top = useAppSelector(selectTop)\r\n    const left = useAppSelector(selectLeft)\r\n    const cursorHeight = useAppSelector(selectCursorHeight)\r\n    const cursorWidth = useAppSelector(selectCursorWidth)\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n        dispatch(setCursorYRadius(props.cursorYRadius))\r\n        dispatch(setCursorXRadius(props.cursorXRadius))\r\n    }, [])\r\n\r\n    return (\r\n        <div id={\"cursor\"} style={{top: top, left: left, height:cursorHeight, width: cursorWidth}}/>\r\n    )\r\n}","import \"./HoverButton.scss\"\r\nimport {Props} from \"react\";\r\n\r\ntype ButtonProps = {\r\n    text?: string,\r\n    fontSize?: string,\r\n    backgroundColor?: string,\r\n    color?: string,\r\n    padding?: string\r\n}\r\n//long padding: \"1.2em 4.5em\"\r\n\r\n\r\nexport function HoverButton(props: ButtonProps){\r\n    // @ts-ignore\r\n    function handleButtonMove(e: MouseEvent<HTMLButtonElement>){\r\n        // var x = e.pageX - e.target.offsetLeft;\r\n        // var y = e.pageY - e.target.offsetTop;\r\n        var x = e.nativeEvent.offsetX\r\n        var y = e.nativeEvent.offsetY\r\n\r\n        e.target.style.setProperty('--x', x + 'px');\r\n        e.target.style.setProperty('--y', y + 'px');\r\n    }\r\n\r\n    const newStyle = {}\r\n    for (let [key, value] of Object.entries(props)){\r\n        if (value !== \"\"){\r\n            // @ts-ignore\r\n            newStyle[key] = value;\r\n        }\r\n    }\r\n\r\n    return (<button style={newStyle} onMouseMove={(e) => handleButtonMove(e) } className=\"button\">\r\n        <span>{props.text}</span>\r\n    </button>)\r\n}","import \"./Sound.scss\"\r\nimport {Hamburger} from \"../../Hamburger/Hamburger\";\r\nimport {LiquidButton} from \"../../LiquidButton/LiquidButton\";\r\nimport {captureMouse, Cursor} from \"../../Cursor/Cursor\";\r\nimport {useAppDispatch} from \"../../app/hooks\";\r\nimport {setCursorXRadius, setCursorYRadius} from \"../../Cursor/cursorSlice\";\r\nimport {useEffect} from \"react\";\r\nimport {HoverButton} from \"../../HoverButton/HoverButton\";\r\n\r\nexport function Sound() {\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    // @ts-ignore\r\n    const cursor = <Cursor cursorYRadius={60} cursorXRadius={40}/>\r\n\r\n\r\n    return (\r\n        <div id={\"sound\"}\r\n             onMouseMove={(e) => {\r\n                 captureMouse(e, dispatch)\r\n             }}>\r\n            {cursor}\r\n            <Hamburger/>\r\n            <div id={\"button__topright\"} >\r\n                <HoverButton text={\"TRY IT NOW\"} fontSize={\"1.0em\"} backgroundColor={\"#fff\"} color={\"#ff0e0e\"} padding={\"1.2em 4.5em;\"}/>\r\n            </div>\r\n            <div id={\"messages\"}>\r\n                <div id={\"title\"}>\r\n                    SUPERIOR SOUND\r\n                </div>\r\n                <div id=\"message\">\r\n                    Experience live versions of your favourite songs.\r\n                </div>\r\n                <div id={\"button\"}>\r\n                    <HoverButton text={\"SEE DEMO\"} fontSize={\"1.0em\"} backgroundColor={\"#fff\"} color={\"#ff0e0e\"} padding={\"1.2em 4.5em;\"}/>\r\n                </div>\r\n            </div>\r\n            <img className=\"boombox\" id={\"boombox__1\"} src={\"landing/medium17.png\"}/>\r\n            <img className=\"boombox\" id={\"boombox__2\"} src={\"landing/medium27.png\"}/>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}","import \"./Pricing.scss\"\r\nimport {Hamburger} from \"../../Hamburger/Hamburger\";\r\nimport {LiquidButton} from \"../../LiquidButton/LiquidButton\";\r\nimport {captureMouse, Cursor} from \"../../Cursor/Cursor\";\r\nimport {useAppDispatch} from \"../../app/hooks\";\r\nimport {setCursorXRadius, setCursorYRadius} from \"../../Cursor/cursorSlice\";\r\nimport {useEffect} from \"react\";\r\nimport {HoverButton} from \"../../HoverButton/HoverButton\";\r\n\r\nexport function Pricing() {\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    // @ts-ignore\r\n    const cursor = <Cursor cursorYRadius={60} cursorXRadius={40}/>\r\n\r\n\r\n    return (\r\n        <div id={\"pricing\"}\r\n             onMouseMove={(e) => {\r\n                 captureMouse(e, dispatch)\r\n             }}>\r\n\r\n            <Hamburger/>\r\n            <div id={\"grid\"}>\r\n                <div className=\"padding\"/>\r\n                <div id={\"basic\"}>\r\n                    <p className={\"title\"}>BASIC</p>\r\n                    <hr/>\r\n                    <p className={\"plan\"}>MONTHLY</p>\r\n                    <p className={\"price\"}>$9</p>\r\n                    <ul>\r\n                        <li>Very Good</li>\r\n                        <li>Amazing</li>\r\n                        <li>Perfect job</li>\r\n                        <li>Love this</li>\r\n                        <li>It's so good</li>\r\n                        <li>Features</li>\r\n                    </ul>\r\n                    <div style={{height: \"20px\"}}/>\r\n                    <HoverButton text={\"SELECT\"} backgroundColor={\"#D24848\"} fontSize={\"0.7em\"} padding={\"0.7em 2.6em\"} />\r\n                </div>\r\n                <div id={\"advanced\"}>\r\n                    <p className={\"title\"}>ADVANCED</p>\r\n                    <hr/>\r\n                    <p className={\"plan\"}>YEARLY</p>\r\n                    <p className={\"price\"}>$99</p>\r\n\r\n                    <ul>\r\n                        <li>Very very good</li>\r\n                        <li>Even Amazing</li>\r\n                        <li>Perfect job</li>\r\n                        <li>Love this more</li>\r\n                        <li>It's so so good</li>\r\n                        <li>More Features</li>\r\n                    </ul>\r\n                    <div style={{height: \"20px\"}}/>\r\n                    <HoverButton text={\"SELECT\"} backgroundColor={\"#FFB33F\"} fontSize={\"0.7em\"} padding={\"0.7em 2.6em\"} />\r\n                </div>\r\n                <div id={\"pro\"}>\r\n                    <p className={\"title\"}>PRO</p>\r\n                    <hr/>\r\n                    <p className={\"plan\"}>YEARLY</p>\r\n                    <p className={\"price\"}>$120</p>\r\n                    <ul>\r\n                        <li>Very Very Good</li>\r\n                        <li>Even more</li>\r\n                        <li>Perfect job</li>\r\n                        <li>Love this more</li>\r\n                        <li>It's so so good</li>\r\n                        <li>More Features</li>\r\n                    </ul>\r\n                    <div style={{height: \"20px\"}}/>\r\n                    <HoverButton text={\"SELECT\"} backgroundColor={\"#1FE1E9\"} fontSize={\"0.7em\"} padding={\"0.7em 2.6em\"} />\r\n                </div>\r\n                <div className=\"padding\"/>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}","import {Hero} from \"./Hero/Hero\";\r\nimport {Sound} from \"./Sound/Sound\";\r\nimport {Pricing} from \"./Pricing/Pricing\";\r\n\r\nexport function Landing(){\r\n    return ( <div>\r\n        <Hero/>\r\n        <Sound/>\r\n        <Pricing/>\r\n    </div>)\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport './App.scss';\nimport {Landing} from \"./Landing/Landing\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Landing/>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport heroReducer from './../Landing/Hero/heroSlice'\nimport cursorReducer from './../Cursor/cursorSlice'\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    hero: heroReducer,\n    cursor: cursorReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}